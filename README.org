#+TITLE: rust "Hello, world!" application
#+AUTHOR: Philippe Crama

* Introduction

Minimal web application to learn rust (web application) programming and
experiment with ChatGPT (sometimes via https://phind.com).
I started with the following prompt:

#+begin_quote
  Teach me how to code in Rust by providing step-by-step instructions
  to deploy a rust hello-world web application deployed behind lighttpd
  alongside an existing pi.hole installation on a raspberry pi 2.
#+end_quote

* Installation

1. Add the [[file:./doc/20-rust-hello-world.conf][20-rust-hello-world.conf]] file to the
   =/etc/lighttpd/conf-available/= directory and create a symlink to enable it:
   #+begin_src shell :exports code
     cd /etc/lighttpd/conf-enabled
     sudo ln -s ../conf-available/20-rust-hello-world.conf
   #+end_src

2. Enable =mod_proxy= for lighttpd.

3. Put [[file:doc/rust-hello-world.service][rust-hello-world.service]] into the =/etc/systemd/system/= directory and
   enable the service =sudo systemctl restart rust-hello-world=.

4. (Re)start the services
   #+begin_src shell :exports code
     sudo systemctl restart rust-hello-world
     sudo systemctl restart lighttpd
   #+end_src

* Resources
** [[https://github.com/pniedzwiedzinski/beSMArt/blob/master/beSMArt/main.py][beSMArt]]
Get total production of inverter:
#+begin_src shell :exports code
  inverter="<inverter IP>"
  curl --silent --insecure "https://${inverter}/dyn/getDashValues.json" \
      | python3 -m json.tool
#+end_src

In =json["result"]["0199-xxxxx9BD"]["6400_00260100"]["1"][0]["val"]=, or as
dirty =sed (1)= hack:
#+begin_src shell :exports code
  curl --silent --insecure "https://${inverter}/dyn/getDashValues.json" \
      | python3 -m json.tool --compact \
      | sed -e 's/.*"6400_00260100":{"1":\[{"val":\([0-9][0-9]*\)}.*/\1/'
#+end_src

** back4app
#+begin_src shell :exports code
  application_id="application_id"
  rest_api_key="REST API Key, not the master key"
  curl -X POST \
       -H "X-Parse-Application-Id: $application_id" \
       -H "X-Parse-REST-API-Key: $rest_api_key" \
       https://parseapi.back4app.com/classes/MeterReadings202303 \
       --json '{"timestamp": {"__type": "Date", "iso": "2024-05-14T03:50:00.000+00:00"}, "pv2012_kWh": 52372.99, "pv2022_kWh": 4795.594}'
#+end_src
