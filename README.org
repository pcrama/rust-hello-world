#+TITLE: rust "Hello, world!" application
#+AUTHOR: Philippe Crama

* Introduction

Minimal web application to learn rust (web application) programming and
experiment with ChatGPT (sometimes via https://phind.com).
I started with the following prompt:

#+begin_quote
  Teach me how to code in Rust by providing step-by-step instructions
  to deploy a rust hello-world web application deployed behind lighttpd
  alongside an existing pi.hole installation on a raspberry pi 2.
#+end_quote

* Installation

1. Add the [[file:./doc/20-rust-hello-world.conf][20-rust-hello-world.conf]] file to the
   =/etc/lighttpd/conf-available/= directory and create a symlink to enable it:
   #+begin_src shell :exports code
     cd /etc/lighttpd/conf-enabled
     sudo ln -s ../conf-available/20-rust-hello-world.conf
   #+end_src

2. Enable =mod_proxy= for lighttpd.

3. Put [[file:doc/rust-hello-world.service][rust-hello-world.service]] into the =/etc/systemd/system/= directory and
   enable the service =sudo systemctl restart rust-hello-world=.

4. Setup certificate and environment variables (in service file)
   #+begin_src shell :exports code
     RUST_HELLO_WORLD_REMOTE_SERVER_URL=https://SMA3xxxxxxxx5.lan/dyn/getDashValues.json
     RUST_HELLO_WORLD_REMOTE_SERVER_CERT=/some/location/that/survives/reboots/inverter-webui-cert.pem
     curl --insecure --silent "${RUST_HELLO_WORLD_REMOTE_SERVER_URL}" -w '%{certs}' \
         | sed -ne '/--BEGIN CERTIFICATE--/,/--END CERTIFICATE--/p' \
               > "${RUST_HELLO_WORLD_REMOTE_SERVER_CERT}"
   #+end_src
   - For =RUST_HELLO_WORLD_REMOTE_SERVER_URL=, you can use this command line (don't forget to append the path)
     #+begin_src shell :exports code
       cut --delimiter=' ' --fields=3,4 "$(sed -ne 's/^dhcp-leasefile=//p' /etc/dnsmasq.d/*dhcp.conf)"
     #+end_src
5. (Re)start the services
   #+begin_src shell :exports code
     sudo systemctl restart rust-hello-world
     sudo systemctl restart lighttpd
   #+end_src

* Resources
** [[https://github.com/pniedzwiedzinski/beSMArt/blob/master/beSMArt/main.py][beSMArt]]
Get total production of inverter:
#+begin_src shell :exports code
  inverter="<inverter IP>"
  curl --silent --insecure "https://${inverter}/dyn/getDashValues.json" \
      | python3 -m json.tool
#+end_src

In =json["result"]["0199-xxxxx9BD"]["6400_00260100"]["1"][0]["val"]=, or as
dirty =sed (1)= hack:
#+begin_src shell :exports code
  curl --silent --insecure "https://${inverter}/dyn/getDashValues.json" \
      | python3 -m json.tool --compact \
      | sed -e 's/.*"6400_00260100":{"1":\[{"val":\([0-9][0-9]*\)}.*/\1/'
#+end_src
